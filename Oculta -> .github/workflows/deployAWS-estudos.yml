#Vamos atualizar o processo de deploy na AMAZON
#Fazemos isso através de RUNNERS
#A ideia é, ao invés de usar o servidor do github, usando o "runs-on", queremos usar um servidor nosso;

name: Deploy on AWS
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: self-hosted #Não vai criar aquela estrutura do ubuntu que usamos, por exemplo, vai usar uma nossa
    #Ao usar isso, precisamos criar nosso hosted, vamos LÁ NO GITHUB/settings/actions/runners -> new self-hosted
    #A partir disso, vamos escolher o sistema do nosso servidor da AWS e ele dará comandos pra fazer
    #Esses comandos precisam ser feito no nosso PC DA AWS, fazemos isso connectando nele pelo terminal
    #Usando a chave que baixamos e o comando ssh -i "nome da chave.pem" ubuntu@ec2....com tem que ver na aws o endereço certo
    #Agora que conectamos no terminal do pc da aws, só seguir o passo a passo do github e deixa tudo padrão, e só da o nome da runner
    #Continuar agora o arquivo daqui

    #Precisamos fazer o necssário para rodar nosso docker no pc da amazon, então vamos:
    timeout-minutes: 20 #Pra caso demore, não dar falso erro
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create back-end env file
        uses: SpicyPizza/create-envfile@1.3
        with:
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }} #Criar no github a variavel de ambiete
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} #PRECISA DO ESPAÇO ENTRE { E PALAVA }
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          directory: back-end/ #Onde criará
          file_name: .env
          fail_on_empty: true #Se falar ao criar, para tudo e encerra tudo
      - name: Create front-end env file
        uses: SpicyPizza/create-envfile@1.3
        with:
          envkey_REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }} #Criar no github a variavel de ambiete
          directory: front-end/
          file_name: .env
          fail_on_empty: true
      - name: Build process #Vamos fazer o build do projeto agora que temos o env
        run: docker-compose build 
      - name: Run app docker compose
        run: docker-compose down & docker-compose up -d #Tira o que tem, e cria, sem travar o terminal (-d serve pra não travar o terminal apos ligar o docker)


